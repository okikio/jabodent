mixin image(value = {})
  -
    let _class = value.class;
    let _picClass = value.picclass;
    let _loading = value.loading || "lazy";
    let _figClass = value.figclass !== "" ? (value.figclass || "min-h-300") : "";
    let src = value.src || "cloudinary/city";
    let alt = value.alt || "Alternate text";

    let cloudinaryTest = /^cloudinary\//.test(src);
    let origin = "https://res.cloudinary.com/okikio-assets/image/upload/dpr_auto,f_auto,fl_lossy";
    let urlParse = (filters = "") => cloudinaryTest ? `${origin + filters}/${src.replace(/^cloudinary\//, "")}` : src;

  figure.img(class=_figClass itemprop="image" itemscope itemtype="https://schema.org/ImageObject")
    .img-overlay
    picture(class=_picClass)
      source(media=`(max-width: 300px)` srcset!=`${urlParse(`,w_auto,q_auto`)}.webp 300w` sizes=`300px` type='image/webp')
      source(media=`(max-width: 300px)` srcset!=`${urlParse(`,w_auto,q_auto`)}.jpeg 300w` sizes=`300px` type='image/jpeg')

      - var n = 4;
      while n <= 24
        source(media=`(max-width: ${n}00px)` srcset!=`${urlParse(`,w_${n}00,q_auto`)}.webp ${n}00w` sizes=`${n}00px` type='image/webp')
        source(media=`(max-width: ${n}00px)` srcset!=`${urlParse(`,w_${n}00,q_auto`)}.jpeg ${n}00w` sizes=`${n}00px` type='image/jpeg')
        - n ++

      img.img-core(class=_class src!=`${urlParse(",w_auto,q_auto")}.jpeg` alt=alt loading=_loading itemprop="url")&attributes(attributes)
