mixin image(value = {})
  -
    let _class = value.class;
    let _picClass = value.picclass;
    let _loading = value.loading || "lazy";
    let _figClass = value.figclass !== "" ? (value.figclass || "min-h-300") : "";
    let src = value.src || "cloudinary/city";
    let alt = value.alt || "Alternate text";

    let cloudinaryTest = /^cloudinary\//.test(src);
    let origin = "https://res.cloudinary.com/okikio-assets/image/upload/dpr_auto,f_auto,fl_lossy";
    let urlParse = (filters = "") => cloudinaryTest ? `${origin + filters}/${src.replace(/^cloudinary\//, "")}` : src;

  figure.img(class=_figClass itemprop="image" itemscope itemtype="https://schema.org/ImageObject")
    .img-overlay
    picture(class=_picClass)
      //- for 
      - var n = 1; 
      while n <= 19
        source(media=`(max-width: ${n}00px)` srcset!=`${urlParse(`,w_${n}00,q_100`)}.webp ${n}00w` type='image/webp')
        source(media=`(max-width: ${n}00px)` srcset!=`${urlParse(`,w_${n}00,q_100`)}.jpeg ${n}00w` type='image/jpeg')
        - n ++

      source(media='(min-width: 1900px)' srcset!=`${urlParse(",w_1900,q_100")}.webp` sizes="1900px" type='image/webp')
      source(media='(min-width: 1900px)' srcset!=`${urlParse(",w_1900,q_100")}.jpeg` sizes="1900px" type='image/jpeg')

      img.img-core(class=_class src!=`${urlParse(",w_850,q_100")}.jpeg` alt=alt loading=_loading itemprop="url")&attributes(attributes)
