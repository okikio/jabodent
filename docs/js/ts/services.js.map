{"version":3,"sources":["services.ts"],"names":[],"mappings":"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","file":"../services.js","sourcesContent":["import { Service } from \"./api.js\";\r\n\r\n//== Services\r\nexport class Splashscreen extends Service {\r\n    protected rootElement: HTMLElement;\r\n    protected innerEl: HTMLElement;\r\n    protected bgEl: HTMLElement;\r\n    protected minimalDuration: number = 1000; // ms\r\n\r\n    public boot() {\r\n        // Elements\r\n        this.rootElement = document.getElementById('splashscreen');\r\n        if (this.rootElement) {\r\n            this.innerEl = this.rootElement.querySelector('.splashscreen-inner');\r\n            this.bgEl = this.rootElement.querySelector('.splashscreen-bg');\r\n        }\r\n\r\n        this.rootElement.style.visibility = \"visible\";\r\n        this.rootElement.style.pointerEvents = \"auto\";\r\n    }\r\n\r\n    public initEvents() {\r\n        if (this.rootElement) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    // You need to override this method\r\n    public async hide() {\r\n        await new Promise(resolve => {\r\n            window.setTimeout(() => {\r\n                this.EventEmitter.emit(\"BEFORE_SPLASHSCREEN_HIDE\");\r\n                resolve();\r\n            }, this.minimalDuration);\r\n        });\r\n\r\n        await new Promise(resolve => {\r\n            let elInner = this.innerEl.animate([\r\n                { opacity: '1' },\r\n                { opacity: '0' },\r\n            ], {\r\n                duration: 500,\r\n                fill: \"forwards\"\r\n            });\r\n            // elInner.onfinish = () => {\r\n            //     this.innerEl.style.opacity = '0';\r\n            // };\r\n\r\n            this.EventEmitter.emit(\"START_SPLASHSCREEN_HIDE\");\r\n\r\n            let rootEl = this.rootElement.animate([\r\n                { transform: \"translateY(0%)\" },\r\n                { transform: \"translateY(100%)\" }\r\n            ], {\r\n                duration: 1200,\r\n                fill: \"forwards\",\r\n                easing: \"cubic-bezier(0.65, 0, 0.35, 1)\" // ease-in-out-cubic\r\n            });\r\n            rootEl.onfinish = () => {\r\n                this.rootElement.style.visibility = \"hidden\";\r\n                this.rootElement.style.pointerEvents = \"none\";\r\n                // this.rootElement.style.transform = \"translateY(100%)\";\r\n                this.EventEmitter.emit(\"AFTER_SPLASHSCREEN_HIDE\");\r\n\r\n                resolve();\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nexport class IntroAnimation extends Service {\r\n    protected elements: Array<Element>;\r\n    protected rootElement: HTMLElement;\r\n\r\n    public boot() {\r\n        // Elements\r\n        this.elements = [...document.querySelectorAll('[data-block=\"IntroBlock\"]')];\r\n\r\n        // Bind methods\r\n        this.prepareToShow = this.prepareToShow.bind(this);\r\n        this.show = this.show.bind(this);\r\n    }\r\n\r\n    public initEvents() {\r\n        this.EventEmitter.on(\"BEFORE_SPLASHSCREEN_HIDE\", this.prepareToShow);\r\n        this.EventEmitter.on(\"START_SPLASHSCREEN_HIDE\", this.show);\r\n        // this.EventEmitter.on(\"BEFORE_TRANSITION_IN\", () => {\r\n        //     this.boot();\r\n        //     this.prepareToShow();\r\n        // });\r\n        // this.EventEmitter.on(\"AFTER_TRANSITION_IN\", this.show);\r\n    }\r\n\r\n    public stopEvents() {\r\n        this.EventEmitter.off(\"BEFORE_SPLASHSCREEN_HIDE\", this.prepareToShow);\r\n        this.EventEmitter.off(\"START_SPLASHSCREEN_HIDE\", this.show);\r\n        this.EventEmitter.off(\"BEFORE_TRANSITION_IN\", () => {\r\n            this.boot();\r\n            this.prepareToShow();\r\n        });\r\n        this.EventEmitter.off(\"AFTER_TRANSITION_IN\", this.show);\r\n    }\r\n\r\n    public prepareToShow() {\r\n        for (let el of this.elements) {\r\n            (el as HTMLElement).style.transform = \"translateY(200px)\";\r\n            (el as HTMLElement).style.opacity = '0';\r\n        }\r\n    }\r\n\r\n    public show() {\r\n        let count = 1;\r\n        for (let el of this.elements) {\r\n            let animation = (el as HTMLElement).animate([\r\n                { transform: \"translateY(200px)\", opacity: 0 },\r\n                { transform: \"translateY(0px)\", opacity: 1 },\r\n            ], {\r\n                duration: 1200,\r\n                delay: 200 * count,\r\n                fill: \"forwards\",\r\n                easing: \"cubic-bezier(0.33, 1, 0.68, 1)\" // ease-out-cubic\r\n            });\r\n            // animation.onfinish = () => {\r\n            //     // (el as HTMLElement).style.opacity = '1';\r\n            //     // (el as HTMLElement).style.transform = \"translateY(0)\";\r\n            // }\r\n            count++;\r\n        }\r\n    }\r\n}\r\n\r\n// export class InView extends Service {\r\n//     protected rootElements: Node[];\r\n//     protected observers: IntersectionObserver[];\r\n//     protected observerOptions: { root: any; rootMargin: string; threshold: number; };\r\n//     protected imgs: Manager<number, Node[]>;\r\n//     protected direction: string[];\r\n//     protected xPercent: number[];\r\n//     public onScreenEl: boolean[];\r\n\r\n//     public boot() {\r\n//         this.rootElements = [...document.querySelectorAll('[data-node-type=\"InViewBlock\"]')];\r\n\r\n//         // Values\r\n//         this.observers = [];\r\n//         this.observerOptions = {\r\n//             root: null,\r\n//             rootMargin: '0px',\r\n//             threshold: 0.1\r\n//         };\r\n\r\n//         // Bind method\r\n//         this.onIntersectionCallback = this.onIntersectionCallback.bind(this);\r\n\r\n//         // Create observers\r\n//         for (let i = 0, len = this.rootElements.length; i < len; i++) {\r\n//             this.observers[i] = new IntersectionObserver(entries => {\r\n//                 this.onIntersectionCallback([i, entries]);\r\n//             }, this.observerOptions);\r\n//         }\r\n\r\n//         // Add block rootElement in the observer\r\n//         this.observe();\r\n\r\n//         // Prepare values\r\n//         this.imgs = new Manager<number, Node[]>();\r\n//         this.onScreenEl = [];\r\n//         this.direction = [];\r\n//         this.xPercent = [];\r\n\r\n//         for (let i = 0, len = this.rootElements.length; i < len; i++) {\r\n//             let rootElement = this.rootElements[i] as HTMLElement;\r\n//             if (rootElement.hasAttribute('data-direction')) {\r\n//                 this.direction[i] = rootElement.getAttribute('data-direction');\r\n//             } else {\r\n//                 this.direction[i] = \"right\";\r\n//             }\r\n\r\n//             if (this.direction[i] === 'left') {\r\n//                 this.xPercent[i] = -(typeof this.xPercent[i] === \"undefined\" ? 30 : this.xPercent[i]);\r\n//             } else {\r\n//                 this.xPercent[i] = typeof this.xPercent[i] === \"undefined\" ? 30 : this.xPercent[i];\r\n//             }\r\n\r\n//             // Find elements\r\n//             this.imgs.set(i, [...rootElement.querySelectorAll('img')]);\r\n//         }\r\n//     }\r\n\r\n//     public initEvents() {\r\n//         this.EventEmitter.on(\"BEFORE_TRANSITION_OUT\", () => {\r\n//             this.unobserve();\r\n//         });\r\n//         this.EventEmitter.on(\"BEFORE_TRANSITION_IN\", () => {\r\n//             this.boot();\r\n//         });\r\n//     }\r\n\r\n//     observe() {\r\n//         for (let i = 0, len = this.rootElements.length; i < len; i++) {\r\n//             this.observers[i].observe(this.rootElements[i] as HTMLElement);\r\n//         }\r\n//     }\r\n\r\n//     unobserve() {\r\n//         for (let i = 0, len = this.rootElements.length; i < len; i++) {\r\n//             this.observers[i].unobserve(this.rootElements[i] as HTMLElement);\r\n//         }\r\n//     }\r\n\r\n//     stopEvents() {\r\n//         this.unobserve();\r\n//     }\r\n\r\n//     onIntersectionCallback([i, entries]) {\r\n//         for (let entry of entries) {\r\n//             if (!this.onScreenEl[i]) {\r\n//                 if (entry.intersectionRatio > 0) {\r\n//                     this.onScreen([i, entry])\r\n//                 } else {\r\n//                     this.offScreen([i, entry])\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     onScreen([i, { target }]) {\r\n//         let animation = target.animate([\r\n//             { transform: `translateX(${this.xPercent[i]}%)`, opacity: 0 },\r\n//             { transform: \"translateX(0%)\", opacity: 1 },\r\n//         ], {\r\n//             duration: 1500,\r\n//             delay: 0.15,\r\n//             easing: \"cubic-bezier(0.22, 1, 0.36, 1)\" // ease-out-quint\r\n//         });\r\n//         animation.onfinish = () => {\r\n//             target.style.transform = \"translateX(0%)\";\r\n//             target.style.opacity = \"1\";\r\n//             this.onScreenEl[i] = true;\r\n//         };\r\n//     }\r\n\r\n//     offScreen([i, { target }]) {\r\n//         target.style.transform = `translateX(${this.xPercent[i]}%)`;\r\n//         target.style.opacity = \"0\";\r\n//     }\r\n// }\r\n"]}