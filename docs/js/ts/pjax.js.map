{"version":3,"sources":["pjax.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAa,IAAI,EAAyB,MAAM,EAA6B,KAAK,EAAE,MAAM,UAAU,CAAC;AAIrH;;;;;;GAMG;AACH,uCAAuC;AACvC,MAAM,CAAC,OAAO,OAAO,IAAK,SAAQ,OAAO;IAAzC;;QACI;;;;;;WAMG;QACO,eAAU,GAAmB,EAAE,CAAC;QAE1C;;;;;;WAMG;QACO,mBAAc,GAAY,KAAK,CAAC;QAE1C;;;;;;WAMG;QACO,oBAAe,GAAY,KAAK,CAAC;QAE3C;;;;;;WAMG;QACO,wBAAmB,GAAY,KAAK,CAAC;QAE/C;;;;;;WAMG;QACO,iBAAY,GAAY,IAAI,CAAC;QAEvC;;;;;;WAMG;QACO,iBAAY,GAAY,KAAK,CAAC;QAExC;;;;;;WAMG;QACO,qBAAgB,GAAY,IAAI,CAAC;IAod/C,CAAC;IAldG;;;;;OAKG;IACK,eAAe;QACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACK,cAAc;QAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACI,IAAI;QACP,IAAI,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAED;;;;;;OAMG;IACI,iBAAiB,CAAC,EAAqB;QAC1C,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,YAAY;YAAE,OAAO,IAAI,CAAC;QACzC,IAAI,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9E,IAAI,OAAO,cAAc,KAAK,QAAQ;YAClC,OAAO,cAAc,CAAC;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACI,SAAS,CAAC,EAAqB,EAAE,KAAgC,EAAE,IAAY;QAClF,IAAI,gBAAgB,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QACjD,IAAI,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,WAAW,GACV,KAAuB,CAAC,KAAK,GAAG,CAAC;YACjC,KAAuB,CAAC,OAAO;YAC/B,KAAuB,CAAC,OAAO;YAC/B,KAAuB,CAAC,QAAQ;YAChC,KAAuB,CAAC,MAAM,CAAC;QACpC,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAK,EAAwB,CAAC,MAAM,KAAK,QAAQ,CAAC;QACxF,IAAI,WAAW,GACX,CAAE,EAAwB,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC;YAC1D,CAAE,EAAwB,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,QAAQ,GAAG,OAAO,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,QAAQ,CAAC;QAC/D,IAAI,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;QAC5E,IAAI,UAAU,GAAG,OAAO,CACpB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAC/C,CAAC;QACF,IAAI,OAAO,GAAG,WAAW,IAAI,UAAU,CAAC;QACxC,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QACxE,OAAO,CAAC,CAAC,MAAM,IAAI,gBAAgB,IAAI,WAAW,IAAI,MAAM,IAAI,WAAW,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC;IACnH,CAAC;IAED;;;;;;OAMG;IACI,OAAO,CAAC,EAAqB;QAChC,IAAI,EAAE,IAAI,EAAE,CAAC,OAAO,IAAI,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,QAAQ;YACnF,OAAO,EAAE,CAAC,IAAI,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,OAAO,CAAC,KAAgB;QAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,MAA2B,CAAC;QAC3C,IAAI,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAEpC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE;YAChB,EAAE,GAAI,EAAkB,CAAC,UAA+B,CAAC;YACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC3B;QAED,yBAAyB;QACzB,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC;YAAE,OAAO;QACpD,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;;;;;;OASG;IACI,OAAO,CAAC,KAAgB;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,EAAE;YAAE,OAAO;QAEhB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAClD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,OAAO;SACV;QAED,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;;OAMG;IACI,YAAY,CAAC,KAAa;QAC7B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACrB,yCAAyC;YACzC,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;SACzC;aAAM;YACH,IAAI,KAAK,KAAK,CAAC,EAAE;gBACb,OAAO,UAAU,CAAC;aACrB;iBAAM;gBACH,yCAAyC;gBACzC,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;aACzC;SACJ;IACL,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,IAAY;QACrB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;;;;;;;;;;OAWG;IACI,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,GAAG,gBAAgB,EAAE,KAAK,EAA6D;QAC5G,sFAAsF;QACtF,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjB,OAAO;SACV;QAED,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC9C,IAAI,UAAU,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC;QACvC,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1B,OAAO;SACV;QAED,IAAI,cAAsB,CAAC;QAC3B,IAAI,KAAK,IAAK,KAAuB,CAAC,KAAK,EAAE;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAE1C,2CAA2C;YAC3C,IAAI,EAAE,KAAK,EAAE,GAAsB,KAAsB,CAAC;YAC1D,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;YACxC,IAAI,YAAY,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC3C,IAAI,UAAU,GAAG,YAAY,GAAG,KAAK,CAAC;YAEtC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YACxC,cAAc,GAAG,UAAU,CAAC;YAE5B,2EAA2E;YAC3E,IAAI,OAAO,KAAK,UAAU,EAAE;gBACxB,uBAAuB;gBACvB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,MAAM,CAAC,MAAM,CAAC;oBACV,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;oBACf,QAAQ,EAAE,QAAQ,CAAE,MAAM;iBAC7B,CAAC,CAAC;aACN;YAED,0EAA0E;YAC1E,IAAI,OAAO,KAAK,MAAM,EAAE;gBACpB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;aACnD;iBAAM,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;aACtD;SACJ;aAAM;YACH,gBAAgB;YAChB,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAA4B,CAAC,IAAI,SAAS,CAAC;YACnF,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YACzC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;gBACpB,GAAG,EAAE,KAAK;gBACV,UAAU,EAAE,cAAc;gBAC1B,IAAI,EAAE,EAAE,MAAM,EAAE;aACnB,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,uBAAuB;gBACvB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC;gBACtB,MAAM,CAAC,MAAM,CAAC;oBACV,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;oBACf,QAAQ,EAAE,QAAQ,CAAE,MAAM;iBAC7B,CAAC,CAAC;aACN;iBAAM;gBACH,MAAM,CAAC,MAAM,CAAC;oBACV,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;oBACf,QAAQ,EAAE,QAAQ,CAAE,MAAM;iBAC7B,CAAC,CAAC;aACN;YAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;SACrD;QAED,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED;;;;;;;OAOG;IACI,WAAW,CAAC,MAA0B,EAAE,KAAY;QACvD,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACzB,IAAI,IAAI,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5B,IAAI,MAAM,CAAC,OAAO,EAAE;YAChB,QAAQ,MAAM,EAAE;gBACZ,KAAK,MAAM;oBACP,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACrD,MAAM;gBACV,KAAK,SAAS;oBACV,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACxD,MAAM;aACb;SACJ;IACL,CAAC;IAED;;;;;;;;;OASG;IACI,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,GAAG,SAAS,EAAiF;QACnJ,IAAI;YACA,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,OAAa,CAAC;YAElB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACpE,IAAI;gBACA,IAAI;oBACA,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5C,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;iBACnF;gBAAC,OAAO,GAAG,EAAE;oBACV,MAAM,wBAAwB,GAAG,EAAE,CAAC;iBACvC;gBAED,KAAK;gBACL,KAAK;gBAEL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;gBAC5F,IAAI;oBACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC;oBAC5D,IAAI,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;wBAC/C,IAAI,EAAE,cAAc;wBACpB,OAAO;wBACP,OAAO;wBACP,OAAO;qBACV,CAAC,CAAC;oBAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;iBAC7D;gBAAC,OAAO,GAAG,EAAE;oBACV,MAAM,GAAG,CAAC;iBACb;gBAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;gBAC3F,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;YAAC,OAAO,GAAG,EAAE;gBACV,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM,oBAAoB,GAAG,EAAE,CAAC;aACnC;YAED,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,gCAAgC;SAC1D;QAAC,OAAO,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,YAAY;gBAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;gBACnC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC3B;IACL,CAAC;IAED;;;;;OAKG;IACI,UAAU,CAAC,OAAe,MAAM,CAAC,QAAQ,CAAC,IAAI;QACjD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE3B,IAAI,MAAM,CAAC,MAAM,EAAE;gBACf,IAAI,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAEzC,IAAI,EAAE,EAAE;oBACJ,IAAI,EAAE,CAAC,cAAc,EAAE;wBACnB,EAAE,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;qBAC7C;yBAAM;wBACH,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC;wBAC/C,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;qBACpD;iBACJ;aACJ;SACJ;IACL,CAAC;IAED;;;;;;OAMG;IACI,UAAU,CAAC,EAAE,QAAQ,EAAQ;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACxD,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAE,GAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC;QAChG,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACI,OAAO,CAAC,KAAgB;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,EAAE;YAAE,OAAO;QAEhB,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,MAAM,SAAS,GAAW,GAAG,CAAC,WAAW,EAAE,CAAC;QAC5C,4DAA4D;QAC5D,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC;YAAE,OAAO;QAEpE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAErD,CAAC,KAAK,IAAI,EAAE;YACR,IAAI;gBACA,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpC;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;aACvC;QACL,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IAED;;;;;;;;OAQG;IACI,aAAa,CAAC,KAAoB;QACrC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;IACxE,CAAC;IAED;;;;OAIG;IACI,UAAU;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED;;;;OAIG;IACI,UAAU;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAC9B,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACrD,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACzD;QAED,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5D,CAAC;IAED;;;;OAIG;IACI,UAAU;QACb,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAC9B,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACxD,QAAQ,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5D;QAED,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/D,CAAC;CACJ","file":"../pjax.js","sourcesContent":["import { Service, LinkEvent, _URL, Page, Trigger, IState, Coords, StateEvent as AnchorEvent, State } from \"./api.js\";\r\n\r\nexport type IgnoreURLsList = Array<RegExp | string>;\r\n\r\n/**\r\n * Creates a Barba JS like PJAX Service, for the Framework\r\n *\r\n * @export\r\n * @class PJAX\r\n * @extends {Service}\r\n */\r\n// Based on Barba JS and StartingBlocks\r\nexport default class PJAX extends Service {\r\n    /**\r\n     * URL's to ignore when prefetching\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected ignoreURLs: IgnoreURLsList = [];\r\n\r\n    /**\r\n     * Whether or not to disable prefetching\r\n     *\r\n     * @private\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    protected prefetchIgnore: boolean = false;\r\n\r\n    /**\r\n     * Current state or transitions\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected isTransitioning: boolean = false;\r\n\r\n    /**\r\n     * Ignore extra clicks of an anchor element if a transition has already started\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected stopOnTransitioning: boolean = false;\r\n\r\n    /**\r\n     * On page change (excluding popstate event) keep current scroll position\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected stickyScroll: boolean = true;\r\n\r\n    /**\r\n     * Force load a page if an error occurs\r\n     *\r\n     * @private\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected forceOnError: boolean = false;\r\n\r\n    /**\r\n     * Dictates whether to auto scroll if an hash is present in the window URL\r\n     *\r\n     * @protected\r\n     * @type boolean\r\n     * @memberof PJAX\r\n     */\r\n    protected autoScrollOnHash: boolean = true;\r\n\r\n    /**\r\n     * Sets the transition state, sets isTransitioning to true\r\n     *\r\n     * @private\r\n     * @memberof PJAX\r\n     */\r\n    private transitionStart() {\r\n        this.isTransitioning = true;\r\n    }\r\n\r\n    /**\r\n     * Sets the transition state, sets isTransitioning to false\r\n     *\r\n     * @private\r\n     * @memberof PJAX\r\n     */\r\n    private transitionStop() {\r\n        this.isTransitioning = false;\r\n    }\r\n\r\n    /**\r\n     * Starts the PJAX Service\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public boot() {\r\n        let current = new State();\r\n        this.HistoryManager.add(current);\r\n        this.changeState(\"replace\", current);\r\n    }\r\n\r\n    /**\r\n     * Gets the transition to use for a certain anchor\r\n     *\r\n     * @param {HTMLAnchorElement} el\r\n     * @returns {(string | null)}\r\n     * @memberof PJAX\r\n     */\r\n    public getTransitionName(el: HTMLAnchorElement): string | null {\r\n        if (!el || !el.getAttribute) return null;\r\n        let transitionAttr = el.getAttribute(this.getConfig(\"transitionAttr\", false));\r\n        if (typeof transitionAttr === 'string')\r\n            return transitionAttr;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the anchor is valid\r\n     *\r\n     * @param {HTMLAnchorElement} el\r\n     * @param {(LinkEvent | KeyboardEvent)} event\r\n     * @param {string} href\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public validLink(el: HTMLAnchorElement, event: LinkEvent | KeyboardEvent, href: string): boolean {\r\n        let pushStateSupport = !window.history.pushState;\r\n        let exists = !el || !href;\r\n        let eventMutate =\r\n            (event as KeyboardEvent).which > 1 ||\r\n            (event as KeyboardEvent).metaKey ||\r\n            (event as KeyboardEvent).ctrlKey ||\r\n            (event as KeyboardEvent).shiftKey ||\r\n            (event as KeyboardEvent).altKey;\r\n        let newTab = el.hasAttribute('target') && (el as HTMLAnchorElement).target === '_blank';\r\n        let crossOrigin =\r\n            ((el as HTMLAnchorElement).protocol !== location.protocol) ||\r\n            ((el as HTMLAnchorElement).hostname !== location.hostname);\r\n        let download = typeof el.getAttribute('download') === 'string';\r\n        let preventSelf = el.hasAttribute(this.getConfig(\"preventSelfAttr\", false));\r\n        let preventAll = Boolean(\r\n            el.closest(this.getConfig(\"preventAllAttr\"))\r\n        );\r\n        let prevent = preventSelf && preventAll;\r\n        let sameURL = new _URL().getFullPath() === new _URL(href).getFullPath();\r\n        return !(exists || pushStateSupport || eventMutate || newTab || crossOrigin || download || prevent || sameURL);\r\n    }\r\n\r\n    /**\r\n     * Returns the href or an Anchor element\r\n     *\r\n     * @param {HTMLAnchorElement} el\r\n     * @returns {(string | null)}\r\n     * @memberof PJAX\r\n     */\r\n    public getHref(el: HTMLAnchorElement): string | null {\r\n        if (el && el.tagName && el.tagName.toLowerCase() === 'a' && typeof el.href === 'string')\r\n            return el.href;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Check if event target is a valid anchor with an href, if so, return the link\r\n     *\r\n     * @param {LinkEvent} event\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public getLink(event: LinkEvent): HTMLAnchorElement {\r\n        let el = event.target as HTMLAnchorElement;\r\n        let href: string = this.getHref(el);\r\n\r\n        while (el && !href) {\r\n            el = (el as HTMLElement).parentNode as HTMLAnchorElement;\r\n            href = this.getHref(el);\r\n        }\r\n\r\n        // Check for a valid link\r\n        if (!el || !this.validLink(el, event, href)) return;\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * When an element is clicked.\r\n     *\r\n     * Get valid anchor element.\r\n     * Go for a transition.\r\n     *\r\n     * @param {LinkEvent} event\r\n     * @returns\r\n     * @memberof PJAX\r\n     */\r\n    public onClick(event: LinkEvent) {\r\n        let el = this.getLink(event);\r\n        if (!el) return;\r\n\r\n        if (this.isTransitioning && this.stopOnTransitioning) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        let href = this.getHref(el);\r\n        this.EventEmitter.emit(\"anchor--click click\", event);\r\n        this.go({ href, trigger: el, event });\r\n    }\r\n\r\n    /**\r\n     * Returns the direction of the State change as a String, either the Back button or the Forward button\r\n     *\r\n     * @param {number} value\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public getDirection(value: number): Trigger {\r\n        if (Math.abs(value) > 1) {\r\n            // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\r\n            return value > 0 ? 'forward' : 'back';\r\n        } else {\r\n            if (value === 0) {\r\n                return 'popstate';\r\n            } else {\r\n                // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\r\n                return value > 0 ? 'back' : 'forward';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Force a page to go to a certain URL\r\n     *\r\n     * @param {string} href\r\n     * @memberof PJAX\r\n     */\r\n    public force(href: string): void {\r\n        window.location.assign(href);\r\n    }\r\n\r\n    /**\r\n     * If transition is running force load page.\r\n     * Stop if currentURL is the same as new url.\r\n     * On state change, change the current state history,\r\n     * to reflect the direction of said state change\r\n     * Load page and page transition.\r\n     *\r\n     * @param {string} href\r\n     * @param {Trigger} [trigger='HistoryManager']\r\n     * @param {AnchorEvent} [event]\r\n     * @memberof PJAX\r\n     */\r\n    public go({ href, trigger = 'HistoryManager', event }: { href: string; trigger?: Trigger; event?: AnchorEvent; }): Promise<void> {\r\n        // If transition is already running and the go method is called again, force load page\r\n        if (this.isTransitioning && this.stopOnTransitioning) {\r\n            this.force(href);\r\n            return;\r\n        }\r\n\r\n        let url = new _URL(href);\r\n        let currentState = this.HistoryManager.last();\r\n        let currentURL = currentState.getURL();\r\n        if (currentURL.equalTo(url)) {\r\n            this.hashAction(url.hash);\r\n            return;\r\n        }\r\n\r\n        let transitionName: string;\r\n        if (event && (event as PopStateEvent).state) {\r\n            this.EventEmitter.emit(\"popstate\", event);\r\n\r\n            // If popstate, get back/forward direction.\r\n            let { state }: { state: IState } = event as PopStateEvent;\r\n            let { index, transition, data } = state;\r\n            let currentIndex = currentState.getIndex();\r\n            let difference = currentIndex - index;\r\n\r\n            trigger = this.getDirection(difference);\r\n            transitionName = transition;\r\n\r\n            // If page remains the same on state change DO NOT run this, it's pointless\r\n            if (trigger !== \"popstate\") {\r\n                // Keep scroll position\r\n                let { x, y } = data.scroll;\r\n                window.scroll({\r\n                    top: y, left: x,\r\n                    behavior: 'smooth'  // 👈 \r\n                });\r\n            }\r\n\r\n            // Based on the direction of the state change either remove or add a state\r\n            if (trigger === \"back\") {\r\n                this.HistoryManager.remove(currentIndex);\r\n                this.EventEmitter.emit(`popstate--back`, event);\r\n            } else if (trigger === \"forward\") {\r\n                this.HistoryManager.addState({ url, transition, data });\r\n                this.EventEmitter.emit(`popstate--forward`, event);\r\n            }\r\n        } else {\r\n            // Add new state\r\n            transitionName = this.getTransitionName(trigger as HTMLAnchorElement) || \"default\";\r\n            const scroll = new Coords();\r\n            const index = this.HistoryManager.size();\r\n            const state = new State({\r\n                url, index,\r\n                transition: transitionName,\r\n                data: { scroll }\r\n            });\r\n\r\n            if (this.stickyScroll) {\r\n                // Keep scroll position\r\n                let { x, y } = scroll;\r\n                window.scroll({\r\n                    top: y, left: x,\r\n                    behavior: 'smooth'  // 👈 \r\n                });\r\n            } else {\r\n                window.scroll({\r\n                    top: 0, left: 0,\r\n                    behavior: 'smooth'  // 👈 \r\n                });\r\n            }\r\n\r\n            this.HistoryManager.add(state);\r\n            this.changeState(\"push\", state);\r\n            this.EventEmitter.emit(\"hstory--new-item\", event);\r\n        }\r\n\r\n        if (event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.EventEmitter.emit(\"go\", event);\r\n        return this.load({ oldHref: currentURL.getPathname(), href, trigger, transitionName });\r\n    }\r\n\r\n    /**\r\n     * Either push or replace history state\r\n     *\r\n     * @param {(\"push\" | \"replace\")} action\r\n     * @param {IState} state\r\n     * @param {_URL} url\r\n     * @memberof PJAX\r\n     */\r\n    public changeState(action: \"push\" | \"replace\", state: State) {\r\n        let url = state.getURL();\r\n        let href = url.getFullPath();\r\n        let json = state.toJSON();\r\n        let args = [json, '', href];\r\n        if (window.history) {\r\n            switch (action) {\r\n                case 'push':\r\n                    window.history.pushState.apply(window.history, args);\r\n                    break;\r\n                case 'replace':\r\n                    window.history.replaceState.apply(window.history, args);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load the new Page as well as a Transition; run the Transition\r\n     *\r\n     * @param {string} oldHref\r\n     * @param {string} href\r\n     * @param {Trigger} trigger\r\n     * @param {string} [transitionName=\"default\"]\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public async load({ oldHref, href, trigger, transitionName = \"default\" }: { oldHref: string; href: string; trigger: Trigger; transitionName?: string; }): Promise<any> {\r\n        try {\r\n            let oldPage = this.PageManager.get(oldHref);\r\n            let newPage: Page;\r\n\r\n            this.EventEmitter.emit(\"page--loading\", { href, oldPage, trigger });\r\n            try {\r\n                try {\r\n                    newPage = await this.PageManager.load(href);\r\n                    this.transitionStart();\r\n                    this.EventEmitter.emit(\"page--loading-complete\", { newPage, oldPage, trigger });\r\n                } catch (err) {\r\n                    throw `Page loading failed, ${err}`;\r\n                }\r\n\r\n                // --\r\n                // --\r\n\r\n                this.EventEmitter.emit(\"transition--before\", { oldPage, newPage, trigger, transitionName });\r\n                try {\r\n                    this.EventEmitter.emit(\"transition--start\", transitionName);\r\n                    let transition = await this.TransitionManager.boot({\r\n                        name: transitionName,\r\n                        oldPage,\r\n                        newPage,\r\n                        trigger\r\n                    });\r\n\r\n                    this.EventEmitter.emit(\"transition--end\", { transition });\r\n                } catch (err) {\r\n                    throw err;\r\n                }\r\n\r\n                this.EventEmitter.emit(\"transition--after\", { oldPage, newPage, trigger, transitionName });\r\n                this.hashAction();\r\n            } catch (err) {\r\n                this.transitionStop();\r\n                throw `Transition Error ${err}`;\r\n            }\r\n\r\n            this.transitionStop(); // Sets isTransitioning to false\r\n        } catch (err) {\r\n            if (this.forceOnError) this.force(href);\r\n            else console.error(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Auto scrolls to an elements position if the element has an hash\r\n     *\r\n     * @param {string} [hash=window.location.hash]\r\n     * @memberof PJAX\r\n     */\r\n    public hashAction(hash: string = window.location.hash) {\r\n        if (this.autoScrollOnHash) {\r\n            let hashID = hash.slice(1);\r\n\r\n            if (hashID.length) {\r\n                let el = document.getElementById(hashID);\r\n\r\n                if (el) {\r\n                    if (el.scrollIntoView) {\r\n                        el.scrollIntoView({ behavior: 'smooth' });\r\n                    } else {\r\n                        let { left, top } = el.getBoundingClientRect();\r\n                        window.scroll({ left, top, behavior: 'smooth' });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check to see if the URL is to be ignored, uses either RegExp of Strings to check\r\n     *\r\n     * @param {_URL} { pathname }\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public ignoredURL({ pathname }: _URL): boolean {\r\n        return this.ignoreURLs.length && this.ignoreURLs.some(url => {\r\n            return typeof url === \"string\" ? url === pathname : (url as RegExp).exec(pathname) !== null;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When you hover over an anchor, prefech the event target's href\r\n     *\r\n     * @param {LinkEvent} event\r\n     * @memberof PJAX\r\n     */\r\n    public onHover(event: LinkEvent): Promise<void> {\r\n        let el = this.getLink(event);\r\n        if (!el) return;\r\n\r\n        const url = new _URL(this.getHref(el));\r\n        const urlString: string = url.getPathname();\r\n        // If Url is ignored or already in cache, don't do any think\r\n        if (this.ignoredURL(url) || this.PageManager.has(urlString)) return;\r\n\r\n        this.EventEmitter.emit(\"anchor--hover hover\", event);\r\n\r\n        (async () => {\r\n            try {\r\n                await this.PageManager.load(url);\r\n            } catch (err) {\r\n                console.warn(\"Prefetch Error\", err);\r\n            }\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * When History state changes.\r\n     *\r\n     * Get url from State\r\n     * Go for a Barba transition.\r\n     *\r\n     * @param {PopStateEvent} event\r\n     * @memberof PJAX\r\n     */\r\n    public onStateChange(event: PopStateEvent): void {\r\n        this.go({ href: window.location.href, trigger: 'popstate', event });\r\n    }\r\n\r\n    /**\r\n     * Bind the event listeners to the PJAX class\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public bindEvents() {\r\n        this.onHover = this.onHover.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Initialize DOM Events\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public initEvents() {\r\n        this.bindEvents();\r\n\r\n        if (this.prefetchIgnore !== true) {\r\n            document.addEventListener('mouseover', this.onHover);\r\n            document.addEventListener('touchstart', this.onHover);\r\n        }\r\n\r\n        document.addEventListener('click', this.onClick);\r\n        window.addEventListener('popstate', this.onStateChange);\r\n    }\r\n\r\n    /**\r\n     * Stop DOM Events\r\n     *\r\n     * @memberof PJAX\r\n     */\r\n    public stopEvents() {\r\n        if (this.prefetchIgnore !== true) {\r\n            document.removeEventListener('mouseover', this.onHover);\r\n            document.removeEventListener('touchstart', this.onHover);\r\n        }\r\n\r\n        document.removeEventListener('click', this.onClick);\r\n        window.removeEventListener('popstate', this.onStateChange);\r\n    }\r\n}"]}